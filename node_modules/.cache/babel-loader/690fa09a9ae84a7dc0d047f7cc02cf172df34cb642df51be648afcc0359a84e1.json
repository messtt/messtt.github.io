{"ast":null,"code":"var _jsxFileName = \"W:\\\\Projets\\\\blueblue\\\\src\\\\animation\\\\animation-cover.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport p5 from 'p5'; // Importez la bibliothèque p5.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnimationCanvas() {\n  _s();\n  const canvasRef = useRef();\n  useEffect(() => {\n    const sketch = p => {\n      let squares = [];\n      let squareSize = 50;\n      p.setup = () => {\n        p.createCanvas(p.windowWidth, 500);\n        p.noStroke();\n        const horizontal_squares = p.windowWidth / squareSize;\n        const vertical_squares = p.windowHeight / squareSize;\n        for (let i = 0; i < horizontal_squares; i++) {\n          for (let j = 0; j < vertical_squares; j++) {\n            let x = i * squareSize;\n            let y = j * squareSize;\n            squares.push({\n              x,\n              y,\n              size: squareSize\n            });\n          }\n        }\n      };\n      p.draw = () => {\n        p.background(220);\n        for (let i = 0; i < squares.length; i++) {\n          let square = squares[i];\n          let distance = p.dist(p.mouseX, p.mouseY, square.x, square.y);\n          let size = p.map(distance, 0, p.width, 5, 50);\n          p.fill(255, 0, 0);\n          p.rect(square.x, square.y, size, size);\n        }\n      };\n    };\n    new p5(sketch);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(AnimationCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = AnimationCanvas;\nexport default AnimationCanvas;\nvar _c;\n$RefreshReg$(_c, \"AnimationCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","p5","jsxDEV","_jsxDEV","AnimationCanvas","_s","canvasRef","sketch","p","squares","squareSize","setup","createCanvas","windowWidth","noStroke","horizontal_squares","vertical_squares","windowHeight","i","j","x","y","push","size","draw","background","length","square","distance","dist","mouseX","mouseY","map","width","fill","rect","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["W:/Projets/blueblue/src/animation/animation-cover.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport p5 from 'p5'; // Importez la bibliothèque p5.js\r\n\r\nfunction AnimationCanvas() {\r\n    const canvasRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const sketch = (p) => {\r\n            let squares = [];\r\n            let squareSize = 50;\r\n\r\n            p.setup = () => {\r\n                p.createCanvas(p.windowWidth, 500);\r\n                p.noStroke();\r\n                const horizontal_squares = p.windowWidth / squareSize;\r\n                const vertical_squares = p.windowHeight / squareSize;\r\n                for (let i = 0; i < horizontal_squares; i++) {\r\n                    for (let j = 0; j < vertical_squares; j++) {\r\n                        let x = i * squareSize;\r\n                        let y = j * squareSize;\r\n                        squares.push({ x, y, size: squareSize });\r\n                    }\r\n                }\r\n            };\r\n\r\n            p.draw = () => {\r\n                p.background(220);\r\n\r\n                for (let i = 0; i < squares.length; i++) {\r\n                    let square = squares[i];\r\n                    let distance = p.dist(p.mouseX, p.mouseY, square.x, square.y);\r\n                    let size = p.map(distance, 0, p.width, 5, 50);\r\n                    p.fill(255, 0, 0);\r\n                    p.rect(square.x, square.y, size, size);\r\n                }\r\n            };\r\n        };\r\n\r\n        new p5(sketch);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={canvasRef}></div>\r\n    );\r\n}\r\n\r\nexport default AnimationCanvas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,EAAE,MAAM,IAAI,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGP,MAAM,CAAC,CAAC;EAE1BC,SAAS,CAAC,MAAM;IACZ,MAAMO,MAAM,GAAIC,CAAC,IAAK;MAClB,IAAIC,OAAO,GAAG,EAAE;MAChB,IAAIC,UAAU,GAAG,EAAE;MAEnBF,CAAC,CAACG,KAAK,GAAG,MAAM;QACZH,CAAC,CAACI,YAAY,CAACJ,CAAC,CAACK,WAAW,EAAE,GAAG,CAAC;QAClCL,CAAC,CAACM,QAAQ,CAAC,CAAC;QACZ,MAAMC,kBAAkB,GAAGP,CAAC,CAACK,WAAW,GAAGH,UAAU;QACrD,MAAMM,gBAAgB,GAAGR,CAAC,CAACS,YAAY,GAAGP,UAAU;QACpD,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,kBAAkB,EAAEG,CAAC,EAAE,EAAE;UACzC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,gBAAgB,EAAEG,CAAC,EAAE,EAAE;YACvC,IAAIC,CAAC,GAAGF,CAAC,GAAGR,UAAU;YACtB,IAAIW,CAAC,GAAGF,CAAC,GAAGT,UAAU;YACtBD,OAAO,CAACa,IAAI,CAAC;cAAEF,CAAC;cAAEC,CAAC;cAAEE,IAAI,EAAEb;YAAW,CAAC,CAAC;UAC5C;QACJ;MACJ,CAAC;MAEDF,CAAC,CAACgB,IAAI,GAAG,MAAM;QACXhB,CAAC,CAACiB,UAAU,CAAC,GAAG,CAAC;QAEjB,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,OAAO,CAACiB,MAAM,EAAER,CAAC,EAAE,EAAE;UACrC,IAAIS,MAAM,GAAGlB,OAAO,CAACS,CAAC,CAAC;UACvB,IAAIU,QAAQ,GAAGpB,CAAC,CAACqB,IAAI,CAACrB,CAAC,CAACsB,MAAM,EAAEtB,CAAC,CAACuB,MAAM,EAAEJ,MAAM,CAACP,CAAC,EAAEO,MAAM,CAACN,CAAC,CAAC;UAC7D,IAAIE,IAAI,GAAGf,CAAC,CAACwB,GAAG,CAACJ,QAAQ,EAAE,CAAC,EAAEpB,CAAC,CAACyB,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;UAC7CzB,CAAC,CAAC0B,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;UACjB1B,CAAC,CAAC2B,IAAI,CAACR,MAAM,CAACP,CAAC,EAAEO,MAAM,CAACN,CAAC,EAAEE,IAAI,EAAEA,IAAI,CAAC;QAC1C;MACJ,CAAC;IACL,CAAC;IAED,IAAItB,EAAE,CAACM,MAAM,CAAC;EAElB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIJ,OAAA;IAAKiC,GAAG,EAAE9B;EAAU;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEnC;AAACnC,EAAA,CA1CQD,eAAe;AAAAqC,EAAA,GAAfrC,eAAe;AA4CxB,eAAeA,eAAe;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}